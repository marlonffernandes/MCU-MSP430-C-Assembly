#include "msp430.h"                     ; #define controlled include file

        #define CONTADOR R12            ; define o R12 com o nome contador
          
        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        CALL    #config
        CALL    #alterna
  
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)

//--------------------------------END MAIN--------------------------------------


//------------------------------uC configuration--------------------------------
 config:
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
       
        BIS.B   #BIT0 + BIT6, &P1DIR    ; Direção de P1.0 e P1.6 como saída

        BIC.B   #BIT6, &P1OUT
        BIS.B   #BIT0, &P1OUT

        RET                             ; Retorna para main
//------------------------------ALTERNA-----------------------------------------
  alterna:         XOR.B   #BIT0 + BIT6, &P1OUT
                   CALL    #delay                   



//-----------------------------DELAY--------------------------------------------
  delay:           PUSH    CONTADOR
                   MOV.W   #0xF420, CONTADOR
  ciclos:          NOP
                   DEC.W   CONTADOR
                   JNZ     ciclos
                   POP.W   CONTADOR
                   JMP     alterna
END
        

